from Crypto.Hash import  SHA256, SHA384
from json import loads,dumps
from Crypto.PublicKey import ECC
from Crypto.Signature import DSS
from requests import  *
import random
from string import printable

q_secp_256 = 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551
URL = "http://176.118.164.39:31337" 
s = Session()
#Поменять секрет на актуальный перед цтф
secret = int(open("secret.txt" , "r").read())

def gen(n):
    return "".join(random.choice(printable[:62]) for i in range(n))

def form_Cert_standart_curve(name_curve, d_,order):
    cert = {"Username":"admin","Website":"example.com","admin":True}
    key = ECC.construct(curve = name_curve ,d = int(d_% order))
    cert["Public key"] = str(key.public_key()).replace("'","")
    h = hash_standart[name_curve].new(dumps(cert).encode())
    signer = DSS.new(key,'fips-186-3')
    signature = signer.sign(h)
    
    total_cert = {"Info":cert,"Signature":signature.hex()}
    return total_cert

hash_standart = {
    "P-256":SHA256,
    "P-384":SHA384
}

new_cert_admin = form_Cert_standart_curve("P-256",secret,q_secp_256)
print("Certificate admin : ", new_cert_admin)

f = open("admin.json","w")
f.write(dumps(new_cert_admin))
f.close()

req = s.post(URL + "/sign",data = {"username" : gen(10),"password" : gen(10)})
files = {"file": open("admin.json","r")}
req = s.post(URL + "/admin", files=files)
print(req.text)
